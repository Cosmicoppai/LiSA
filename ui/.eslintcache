[{"D:\\DesktopApp\\LiSA\\ui\\src\\index.js":"1","D:\\DesktopApp\\LiSA\\ui\\src\\App.js":"2","D:\\DesktopApp\\LiSA\\ui\\src\\theme.js":"3","D:\\DesktopApp\\LiSA\\ui\\src\\store.js":"4","D:\\DesktopApp\\LiSA\\ui\\src\\screens\\settingScreen.js":"5","D:\\DesktopApp\\LiSA\\ui\\src\\screens\\animeDetailsScreen.js":"6","D:\\DesktopApp\\LiSA\\ui\\src\\screens\\homeScreen.js":"7","D:\\DesktopApp\\LiSA\\ui\\src\\screens\\downloadsScreen.js":"8","D:\\DesktopApp\\LiSA\\ui\\src\\components\\ep-popover.js":"9","D:\\DesktopApp\\LiSA\\ui\\src\\reducers\\animeReducers.js":"10","D:\\DesktopApp\\LiSA\\ui\\src\\actions\\animeActions.js":"11","D:\\DesktopApp\\LiSA\\ui\\src\\components\\search-result-card.js":"12","D:\\DesktopApp\\LiSA\\ui\\src\\components\\navbar.js":"13","D:\\DesktopApp\\LiSA\\ui\\src\\constants\\animeConstants.js":"14"},{"size":1135,"mtime":1659361646061,"results":"15","hashOfConfig":"16"},{"size":799,"mtime":1659354148742,"results":"17","hashOfConfig":"16"},{"size":386,"mtime":1659371756349,"results":"18","hashOfConfig":"16"},{"size":611,"mtime":1659269870663,"results":"19","hashOfConfig":"16"},{"size":233,"mtime":1659212021287,"results":"20","hashOfConfig":"16"},{"size":3979,"mtime":1659271989180,"results":"21","hashOfConfig":"16"},{"size":2344,"mtime":1659260146454,"results":"22","hashOfConfig":"16"},{"size":613,"mtime":1659363252314,"results":"23","hashOfConfig":"16"},{"size":2645,"mtime":1659279203106,"results":"24","hashOfConfig":"16"},{"size":1967,"mtime":1659336404961,"results":"25","hashOfConfig":"16"},{"size":1914,"mtime":1659528151348,"results":"26","hashOfConfig":"16"},{"size":2237,"mtime":1659260304482,"results":"27","hashOfConfig":"16"},{"size":835,"mtime":1659252438867,"results":"28","hashOfConfig":"16"},{"size":963,"mtime":1659279439434,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"p0wd4a",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DesktopApp\\LiSA\\ui\\src\\index.js",["64","65","66","67","68","69","70"],"import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport AnimeDetailsScreen from \"./screens/animeDetailsScreen\";\nimport SettingScreen from \"./screens/settingScreen\";\nimport { HomeScreen } from \"./screens/homeScreen\";\nimport { ChakraProvider, useColorMode } from \"@chakra-ui/react\";\nimport { theme } from \"./theme\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n// import { socket, SocketContext } from \"./socket\";\n\nfunction ForceDarkMode(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  useEffect(() => {\n    if (colorMode === \"dark\") return;\n    toggleColorMode();\n  }, [colorMode]);\n\n  return props.children;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  // <SocketContext.Provider value={socket}>\n    <ChakraProvider theme={theme}>\n      <ForceDarkMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </ForceDarkMode>\n    </ChakraProvider>\n  //  </SocketContext.Provider>\n);\n","D:\\DesktopApp\\LiSA\\ui\\src\\App.js",[],"D:\\DesktopApp\\LiSA\\ui\\src\\theme.js",[],"D:\\DesktopApp\\LiSA\\ui\\src\\store.js",[],"D:\\DesktopApp\\LiSA\\ui\\src\\screens\\settingScreen.js",[],"D:\\DesktopApp\\LiSA\\ui\\src\\screens\\animeDetailsScreen.js",["71","72","73","74"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  Heading,\r\n  Image,\r\n  Stack,\r\n  Text,\r\n  Icon,\r\n  Box,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FiMonitor } from \"react-icons/fi\";\r\nimport EpPopover from \"../components/ep-popover\";\r\nimport { getStreamDetails } from \"../actions/animeActions\";\r\n\r\nexport default function AnimeDetailsScreen() {\r\n  const dispatch = useDispatch();\r\n  const { animes: data, loading } = useSelector(\r\n    (state) => state.animeSearchList\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [data]);\r\n\r\n  const episodeClickHandler = (item) => {\r\n    console.log(item);\r\n    dispatch(getStreamDetails(data.session, item.ep_session));\r\n    onOpen();\r\n  };\r\n\r\n  return (\r\n    <Center py={6} w=\"100%\">\r\n      {data && (\r\n        <Stack\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          w={{ sm: \"100%\", md: \"80%\" }}\r\n          justifyContent=\"space-between\"\r\n          direction={{ base: \"column\", md: \"row\" }}\r\n          bg={\"gray.900\"}\r\n          boxShadow={\"2xl\"}\r\n          padding={4}\r\n        >\r\n          <Flex flex={1} bg=\"blue.200\" maxW={\"30%\"} maxHeight={\"500px\"}>\r\n            <Image objectFit=\"contain\" boxSize=\"100%\" src={data.poster} />\r\n          </Flex>\r\n          <Stack\r\n            maxW={\"65%\"}\r\n            flex={1}\r\n            flexDirection=\"column\"\r\n            alignItems=\"flex-start\"\r\n            p={1}\r\n            pt={2}\r\n          >\r\n            <Heading fontSize={\"2xl\"} fontFamily={\"body\"}>\r\n              {`${data.eng_name}`}\r\n              {data.jp_name ? ` | ${data.jp_name}` : \"\"}\r\n            </Heading>\r\n\r\n            <Text fontWeight={600} color={\"gray.500\"} size=\"sm\" mb={4}>\r\n              No of episodes {data.no_of_episodes}\r\n            </Text>\r\n\r\n            <Stack align={\"center\"} justify={\"center\"} direction={\"row\"} mt={6}>\r\n              <Badge\r\n                px={2}\r\n                py={1}\r\n                fontWeight={\"400\"}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"content\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Icon as={FiMonitor} />\r\n                <Text ml=\"1\">{data.description.Type}</Text>\r\n              </Badge>\r\n              <Badge px={2} py={1} fontWeight={\"400\"}>\r\n                {data.description.Aired}\r\n              </Badge>\r\n              <Badge px={2} py={1} fontWeight={\"400\"}>\r\n                {data.description.Status}\r\n              </Badge>\r\n            </Stack>\r\n            <Text color={\"gray.400\"} px={3}>\r\n              {data.description.Synopsis}\r\n            </Text>\r\n\r\n            <Box mt={5}>\r\n              <Flex direction={\"row\"} flexWrap=\"wrap\">\r\n                {data.episode_details.ep_details.map((item, key) => {\r\n                  console.log(item);\r\n                  return (\r\n                    <Flex\r\n                      cursor={\"pointer\"}\r\n                      key={key}\r\n                      p={2}\r\n                      mr={2}\r\n                      mt={2}\r\n                      bg=\"brand.900\"\r\n                      width={\"100%\"}\r\n                      maxWidth={\"50px\"}\r\n                      justifyContent=\"center\"\r\n                      onClick={() =>\r\n                        episodeClickHandler(Object.values(item)[0])\r\n                      }\r\n                    >\r\n                      <Text textAlign={\"center\"}>{Object.keys(item)[0]}</Text>\r\n                    </Flex>\r\n                  );\r\n                })}\r\n              </Flex>\r\n              <EpPopover isOpen={isOpen} onOpen={onOpen} onClose={onClose} />\r\n            </Box>\r\n          </Stack>\r\n        </Stack>\r\n      )}\r\n    </Center>\r\n  );\r\n}\r\n","D:\\DesktopApp\\LiSA\\ui\\src\\screens\\homeScreen.js",["75","76","77","78","79","80","81","82","83"],"import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  IconButton,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  InputRightElement,\r\n  Kbd,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/react\";\r\nimport { Image } from \"@chakra-ui/react\";\r\nimport {\r\n  DownloadIcon,\r\n  HamburgerIcon,\r\n  SearchIcon,\r\n  SettingsIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport { clearSearch, searchAnimeList } from \"../actions/animeActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchResultCard from \"../components/search-result-card\";\r\nexport const HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [query, setQuery] = React.useState(\"\");\r\n  const handleSearchChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const { animes, loading } = useSelector((state) => state.animeSearchList);\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\" && query) {\r\n      dispatch(searchAnimeList(query));\r\n    }\r\n    if (!query) {\r\n      dispatch(clearSearch());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex w=\"100vw\" h=\"100%\" direction=\"column\">\r\n      \r\n      <Flex\r\n        align=\"center\"\r\n        justify=\"center\"\r\n        direction=\"column\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n      >\r\n        <Image\r\n          objectFit=\"cover\"\r\n          src=\"/images/home_screen_logo.png\"\r\n          alt=\"logo\"\r\n        />{\" \"}\r\n        <Box w=\"50%\">\r\n          <InputGroup>\r\n            <InputRightElement\r\n              pointerEvents=\"none\"\r\n              children={\r\n                <Box mr=\"2\">\r\n                  <Kbd>Enter</Kbd>\r\n                </Box>\r\n              }\r\n            />\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={<SearchIcon color=\"gray.300\" />}\r\n            />\r\n            <Input\r\n              color={\"font.main\"}\r\n              placeholder=\"Search Anime\"\r\n              onKeyDown={handleKeyDown}\r\n              value={query}\r\n              onChange={handleSearchChange}\r\n            />\r\n          </InputGroup>\r\n        </Box>\r\n        {!loading && animes && <SearchResultCard data={animes} />}\r\n        {loading && (\r\n          <Image src=\"/images/loader-serch.gif\" alt=\"loader\" boxSize=\"150px\" />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n","D:\\DesktopApp\\LiSA\\ui\\src\\screens\\downloadsScreen.js",["84","85","86","87"],"import React, { useState, useContext, useCallback, useEffect } from \"react\";\r\nimport { w3cwebsocket } from \"websocket\";\r\nvar W3CWebSocket = require(\"websocket\").w3cwebsocket;\r\nconst client = new W3CWebSocket(\"ws://localhost:9000\");\r\n\r\nconst DownloadScreen = () => {\r\n  useEffect(() => {\r\n    client.onopen = () => {\r\n      console.log(\"WebSocket Client Connected\");\r\n      client.send(JSON.stringify({ type: \"connect\" }));\r\n    };\r\n    client.onmessage = (message) => {\r\n      console.log(JSON.parse(message.data));\r\n    };\r\n  }, []);\r\n\r\n  return <div>DownloadScreen</div>;\r\n};\r\n\r\nexport default DownloadScreen;\r\n","D:\\DesktopApp\\LiSA\\ui\\src\\components\\ep-popover.js",["88","89","90"],"import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Select,\r\n  Stack,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { playVideo } from \"../actions/animeActions\";\r\n\r\nconst EpPopover = ({ isOpen, onOpen, onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const { details, loading } = useSelector((state) => state.animeStreamDetails);\r\n  const [language, setLanguage] = useState(null);\r\n  const [quality, setQuality] = useState(null);\r\n\r\n  const playHandler = () => {\r\n    if (Object.values(Object.values(details[language])[0])[0]) {\r\n      dispatch(\r\n        playVideo(Object.values(Object.values(details[language])[0])[0])\r\n      );\r\n    }\r\n  };\r\n  console.log(details);\r\n  return (\r\n    <>\r\n      {details && (\r\n        <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Select quality and action</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Stack>\r\n                <Select\r\n                  placeholder=\"Language\"\r\n                  size=\"lg\"\r\n                  onChange={(e) => setLanguage(e.target.value)}\r\n                >\r\n                  {Object.keys(details).map((language, idx) => {\r\n                    return (\r\n                      <option key={idx} value={language}>\r\n                        {language}{\" \"}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n                <Select\r\n                  placeholder=\"Quality\"\r\n                  size=\"lg\"\r\n                  disabled={!language}\r\n                  onChange={(e) => setQuality(e.target.value)}\r\n                >\r\n                  {details[language]?.map((quality, idx) => {\r\n                    return (\r\n                      <option key={idx} value={Object.keys(quality)[0]}>\r\n                        {Object.keys(quality)[0]}p\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Stack>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <Button colorScheme=\"blue\" mr={3} onClick={playHandler}>\r\n                Play\r\n              </Button>\r\n              <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n                Download\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EpPopover;\r\n","D:\\DesktopApp\\LiSA\\ui\\src\\reducers\\animeReducers.js",[],"D:\\DesktopApp\\LiSA\\ui\\src\\actions\\animeActions.js",[],"D:\\DesktopApp\\LiSA\\ui\\src\\components\\search-result-card.js",["91"],"import React from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  Heading,\r\n  Image,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SearchResultCard = ({ data }) => {\r\n  return (\r\n    <Center py={6} w=\"100%\" h=\"100%\">\r\n      <Stack\r\n        borderWidth=\"1px\"\r\n        borderRadius=\"lg\"\r\n        w={{ sm: \"100%\", md: \"50%\" }}\r\n        height={{ sm: \"476px\", md: \"100%\" }}\r\n        maxH=\"20rem\"\r\n        direction={{ base: \"column\", md: \"row\" }}\r\n        bg={useColorModeValue(\"white\", \"gray.900\")}\r\n        boxShadow={\"2xl\"}\r\n        padding={4}\r\n      >\r\n        <Flex flex={1} bg=\"blue.200\">\r\n          <Link\r\n            to=\"anime-details\"\r\n            style={{ textDecoration: \"none\", width: \"100%\" }}\r\n          >\r\n            <Image objectFit=\"contain\" boxSize=\"100%\" src={data.poster} />\r\n          </Link>\r\n        </Flex>\r\n        <Stack\r\n          flex={1}\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"flex-start\"\r\n          p={1}\r\n          pt={2}\r\n        >\r\n          <Link\r\n            to=\"anime-details\"\r\n            style={{ textDecoration: \"none\", width: \"100%\" }}\r\n          >\r\n            <Heading fontSize={\"2xl\"} fontFamily={\"body\"}>\r\n              {`${data.eng_name}`}\r\n              {data.jp_name ? ` | ${data.jp_name}` : \"\"}\r\n            </Heading>\r\n          </Link>\r\n\r\n          <Text fontWeight={600} color={\"gray.500\"} size=\"sm\" mb={4}>\r\n            No of episodes {data.no_of_episodes}\r\n          </Text>\r\n\r\n          <Stack align={\"center\"} justify={\"center\"} direction={\"row\"} mt={6}>\r\n            <Badge\r\n              px={2}\r\n              py={1}\r\n              bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n              fontWeight={\"400\"}\r\n            >\r\n              {data.description.Type}\r\n            </Badge>\r\n            <Badge\r\n              px={2}\r\n              py={1}\r\n              bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n              fontWeight={\"400\"}\r\n            >\r\n              {data.description.Aired}\r\n            </Badge>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default SearchResultCard;\r\n","D:\\DesktopApp\\LiSA\\ui\\src\\components\\navbar.js",[],"D:\\DesktopApp\\LiSA\\ui\\src\\constants\\animeConstants.js",[],{"ruleId":"92","severity":1,"message":"93","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":23},{"ruleId":"92","severity":1,"message":"96","line":4,"column":25,"nodeType":"94","messageId":"95","endLine":4,"endColumn":31},{"ruleId":"92","severity":1,"message":"97","line":4,"column":33,"nodeType":"94","messageId":"95","endLine":4,"endColumn":38},{"ruleId":"92","severity":1,"message":"98","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":26},{"ruleId":"92","severity":1,"message":"99","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":21,"column":6,"nodeType":"103","endLine":21,"endColumn":17,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"105","line":4,"column":3,"nodeType":"94","messageId":"95","endLine":4,"endColumn":9},{"ruleId":"92","severity":1,"message":"106","line":15,"column":10,"nodeType":"94","messageId":"95","endLine":15,"endColumn":14},{"ruleId":"92","severity":1,"message":"107","line":23,"column":25,"nodeType":"94","messageId":"95","endLine":23,"endColumn":32},{"ruleId":"101","severity":1,"message":"108","line":34,"column":6,"nodeType":"103","endLine":34,"endColumn":12,"suggestions":"109"},{"ruleId":"92","severity":1,"message":"106","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"110","line":7,"column":3,"nodeType":"94","messageId":"95","endLine":7,"endColumn":13},{"ruleId":"92","severity":1,"message":"111","line":13,"column":3,"nodeType":"94","messageId":"95","endLine":13,"endColumn":7},{"ruleId":"92","severity":1,"message":"112","line":14,"column":3,"nodeType":"94","messageId":"95","endLine":14,"endColumn":13},{"ruleId":"92","severity":1,"message":"113","line":15,"column":3,"nodeType":"94","messageId":"95","endLine":15,"endColumn":11},{"ruleId":"92","severity":1,"message":"114","line":16,"column":3,"nodeType":"94","messageId":"95","endLine":16,"endColumn":11},{"ruleId":"92","severity":1,"message":"115","line":20,"column":3,"nodeType":"94","messageId":"95","endLine":20,"endColumn":15},{"ruleId":"92","severity":1,"message":"116","line":21,"column":3,"nodeType":"94","messageId":"95","endLine":21,"endColumn":16},{"ruleId":"92","severity":1,"message":"117","line":23,"column":3,"nodeType":"94","messageId":"95","endLine":23,"endColumn":15},{"ruleId":"92","severity":1,"message":"118","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"119","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":37},{"ruleId":"92","severity":1,"message":"120","line":1,"column":39,"nodeType":"94","messageId":"95","endLine":1,"endColumn":50},{"ruleId":"92","severity":1,"message":"121","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":22},{"ruleId":"92","severity":1,"message":"122","line":12,"column":3,"nodeType":"94","messageId":"95","endLine":12,"endColumn":16},{"ruleId":"92","severity":1,"message":"107","line":21,"column":20,"nodeType":"94","messageId":"95","endLine":21,"endColumn":27},{"ruleId":"92","severity":1,"message":"123","line":23,"column":10,"nodeType":"94","messageId":"95","endLine":23,"endColumn":17},{"ruleId":"92","severity":1,"message":"105","line":4,"column":3,"nodeType":"94","messageId":"95","endLine":4,"endColumn":9},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'AnimeDetailsScreen' is defined but never used.","'SettingScreen' is defined but never used.","'HomeScreen' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleColorMode'. Either include it or remove the dependency array.","ArrayExpression",["124"],"'Button' is defined but never used.","'Link' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["125"],"'IconButton' is defined but never used.","'Menu' is defined but never used.","'MenuButton' is defined but never used.","'MenuItem' is defined but never used.","'MenuList' is defined but never used.","'DownloadIcon' is defined but never used.","'HamburgerIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'useCallback' is defined but never used.","'w3cwebsocket' is defined but never used.","'useDisclosure' is defined but never used.","'quality' is assigned a value but never used.",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [colorMode, toggleColorMode]",{"range":"130","text":"131"},"Update the dependencies array to be: [data, navigate]",{"range":"132","text":"133"},[759,770],"[colorMode, toggleColorMode]",[814,820],"[data, navigate]"]